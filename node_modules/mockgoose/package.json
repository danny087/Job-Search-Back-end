{
  "_args": [
    [
      {
        "raw": "mockgoose",
        "scope": null,
        "escapedName": "mockgoose",
        "name": "mockgoose",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/danny/jobsearch"
    ]
  ],
  "_from": "mockgoose",
  "_hasShrinkwrap": false,
  "_id": "mockgoose@8.0.2",
  "_location": "/mockgoose",
  "_nodeVersion": "9.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mockgoose_8.0.2_1558321175640_0.4953124964829245"
  },
  "_npmUser": {
    "name": "lonerifle",
    "email": "alwyn.tan@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "ms": "2.1.2"
  },
  "_requested": {
    "raw": "mockgoose",
    "scope": null,
    "escapedName": "mockgoose",
    "name": "mockgoose",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mockgoose/-/mockgoose-8.0.2.tgz",
  "_shasum": "2dc2df09257f14911af51eedafcebda939e9eaf7",
  "_shrinkwrap": null,
  "_spec": "mockgoose",
  "_where": "/home/danny/jobsearch",
  "author": {
    "name": "Anthony McCormick",
    "email": "anthony.mccormick@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/Mockgoose/Mockgoose/issues"
  },
  "contributors": [
    {
      "name": "Jonathon Hill",
      "email": "jhill9693@gmail.com"
    }
  ],
  "dependencies": {
    "async": "^2.6.1",
    "debug": "^4.0.1",
    "fs-extra": "^7.0.0",
    "https-proxy-agent": "^2.2.1",
    "mongodb-prebuilt": "^6.4.0",
    "portfinder": "^1.0.13",
    "rimraf": "^2.6.1",
    "uuid": "^3.0.1"
  },
  "deprecated": "Mockgoose is no longer actively maintained, use mongodb-memory-server instead",
  "description": "Mockgoose is an in memory database mock to allow for testing of applications that rely on Mongoose.",
  "devDependencies": {
    "@types/async": "~2.0.39",
    "@types/fs-extra": "^5.0.4",
    "@types/mongoose": "^5.2.17",
    "@types/node": "^8.10.30",
    "@types/node-uuid": "0.0.28",
    "chai": "^4.1.2",
    "jshint": "^2.9.6",
    "mocha": "^5.2.0",
    "mongoose": "*",
    "typescript": "^3.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-lcteBh9fQryASx7zKccbJ4qWiAMcyTCEY/8RBRxTqzxCZU3RaEkWApNJrkAwAyK18JiSccAMBpKCEwxkT/kvyw==",
    "shasum": "2dc2df09257f14911af51eedafcebda939e9eaf7",
    "tarball": "https://registry.npmjs.org/mockgoose/-/mockgoose-8.0.2.tgz",
    "fileCount": 41,
    "unpackedSize": 103329,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4hgYCRA9TVsSAnZWagAAYwsP/As8xpvY4DebQ0xAxLZL\n4/cUuLXPorS95qa/JVfvuokuAujoBc4KrET7KV/jm8yvSn4Z9DLEsrzKrDzk\nHKG9I7kfSQ3KJWl215EblT07TljIJOP/XIXr0YTijNBwaTKUdc4D7epLwS/6\ns3xGrjz4hidKP4FviNqND8bz/Ady2Cii00fYOpbf6VYLHZCTIr0ljvdfLz8m\nS0Nrk02Y+0ReS/tylQRDwYxoTH54bSUEr6LUxXi2RvrQRCLe1j4LskynlSaH\n1mDK1UcWN/sADVy66A9UFSETygNAX6tGWQ3WlQrFmTI/yv5im9T74s/5kNWM\ntjcb/cQHlmxwHx3U2k40UfN9Eg00dsG0hMIIBS4OWIEVKFa8B4RYrt4vv/3t\nBBJThCVS1LimykMFtYwxYl7oS3o/Sryfg81BRCMYJupJ+Pl2fJ2v6opMfOES\n8ZRI9Fc8cs1iCJE0l3imu+p6cjR+oeq+oh1Mfh9Ag55gLdui4MtIrsHfvcjR\nmK7czOoNqQNB4+ywmGwUtFS0iQNIZyIL2R0SZ+DK0gb7a1HweiV99BeoP+Ry\nl/hPiZ511R3AP2Znt/2Rz7bwko6i1xX+2O+AXC9jxDe3OcSYCf335EF9GJON\n04cQKPwo74dWya4k9o6o3j6DoDwrBbcn5dCgSVfzWzO8ODTKiDqmnrJpcrE/\n76yy\r\n=0Nkz\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "41376b8d4374f950e0e938ea9a87b81cfb2e2b42",
  "homepage": "https://github.com/Mockgoose/Mockgoose",
  "keywords": [
    "mongodb",
    "mongoose",
    "datastore",
    "nosql",
    "sql",
    "db",
    "database",
    "mock",
    "stub",
    "in memory"
  ],
  "license": "MIT",
  "main": "built/mockgoose.js",
  "maintainers": [
    {
      "name": "mccormicka",
      "email": "anthony.mccormick@gmail.com"
    },
    {
      "name": "winfinit",
      "email": "winfinit@gmail.com"
    }
  ],
  "name": "mockgoose",
  "optionalDependencies": {},
  "readme": "## Warning: This package has been deprecated! Consider using mongodb-memory-server instead.\n\n[![Build Status](https://travis-ci.org/Mockgoose/Mockgoose.svg?branch=master)](https://travis-ci.org/Mockgoose/Mockgoose)\n\nPlease Share on Twitter if you like #mockgoose\n<a href=\"https://twitter.com/intent/tweet?hashtags=mockgoose&amp;&amp;text=Check%20out%20this%20%23Mongoose%20%23MongoDB%20Mocking%20Framework&amp;tw_p=tweetbutton&amp;url=http%3A%2F%2Fbit.ly%2F19gcHwm&amp;via=omnipitence\" style=\"float:right\">\n<img src=\"https://raw.github.com/Mockgoose/Mockgoose/master/twittershare.png\">\n</a>\n\n## What is Mockgoose?\n\nMockgoose provides test database by spinning up mongod on the back when mongoose.connect call is made. By default it is using in memory store which does not have persistence.\n\n## Install\nTo install the latest official version, use NPM:\n\n```bash\nnpm install mockgoose --save-dev\n```\n\n## Usage\nYou simply require Mongoose and Mockgoose and wrap Mongoose with Mockgoose.\n\n```javascript\nvar mongoose = require('mongoose');\nvar Mockgoose = require('mockgoose').Mockgoose;\nvar mockgoose = new Mockgoose(mongoose);\n\nmockgoose.prepareStorage().then(function() {\n\t// mongoose connection\t\t\n});\n```\n\nOnce Mongoose has been wrapped by Mockgoose connect() will be intercepted by Mockgoose so that no MongoDB instance is created.\n\n## Mocha\n\nDefault mocha timeout is 2000ms, change it to two minutes.\n\n```bash\nmocha --timeout 120000\n```\n\nSame can be done by creating 'mocha.opts' file in your test directory with \"--timeout 120000\" entry.\n\n### Example\n\n```javascript\nvar Mongoose = require('mongoose').Mongoose;\nvar mongoose = new Mongoose();\n\nvar Mockgoose = require('mockgoose').Mockgoose;\nvar mockgoose = new Mockgoose(mongoose);\n\nbefore(function(done) {\n\tmockgoose.prepareStorage().then(function() {\n\t\tmongoose.connect('mongodb://example.com/TestingDB', function(err) {\n\t\t\tdone(err);\n\t\t});\n\t});\n});\n\ndescribe('...', function() {\n\tit(\"...\", function(done) {\n\t\t// ...\n\t\tdone();\n\t});\n});\n```\n\n## ES6 Example without mocha\n\n```javascript\nimport * as mongoose from 'mongoose';\nimport {Mockgoose} from 'mockgoose';\n\nlet mockgoose: Mockgoose = new Mockgoose(mongoose);\n\nmockgoose.prepareStorage().then(() => {\n\tmongoose.connect('mongodb://foobar/baz');\n\tmongoose.connection.on('connected', () => {  \n\t  console.log('db connection is now open');\n\t}); \n});\n```\n\n## Helper methods and variables (mockgoose.helper)\n\n### reset(callback)\nReset method will remove **ALL** of the collections from a temporary store,\nnote that this method is part of **mockgoose** object, and not defined under\n**mongoose**\n\n```javascript\nmockgoose.helper.reset().then(() => {\n\tdone()\n});\n```\n\n### isMocked\nReturns **TRUE** from **mongoose** object if Mockgoose is applied\n\n```javascript\nif ( mockgoose.helper.isMocked() === true ) {\n  // mongoose object is mocked\n}\n```\n\n### setDbVersion(mongoDBVersion: string)\nSet version of MongoDB release\n\n```javascript\nimport * as mongoose from 'mongoose';\nimport {Mockgoose} from 'mockgoose';\n\nlet mockgoose: Mockgoose = new Mockgoose(mongoose);\nmockgoose.helper.setDbVersion(\"3.2.1\");\n\nmockgoose.prepareStorage().then(() => {\n\tmongoose.connect('mongodb://foobar/baz');\n\tmongoose.connection.on('connected', () => {  \n\t  console.log('db connection is now open');\n\t}); \n});\n```\n\n### setProxy(proxy: string)\nSet proxy for downloading MongoDB release\n\n```javascript\nimport * as mongoose from 'mongoose';\nimport {Mockgoose} from 'mockgoose';\n\nlet mockgoose: Mockgoose = new Mockgoose(mongoose);\n\nlet proxy: string = process.env.http_proxy || 'http://example.com:8080';\nmockgoose.helper.setProxy(proxy);\n\nmockgoose.prepareStorage().then(() => {\n\tmongoose.connect('mongodb://foobar/baz');\n\tmongoose.connection.on('connected', () => {  \n\t  console.log('db connection is now open');\n\t}); \n});\n```\n\n## Development\n\nThis section contains instructions for developers working on the Mockgoose codebase.\nIt is not relevant if you just want to use Mockgoose as a library in your project.\n\n### Pre-requisites\n\n* Node.js >= 6\n\n### Setup\n\n```bash\ngit clone git@github.com:Mockgoose/Mockgoose.git\ncd Mockgoose\nnpm install\nnpm test\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Mockgoose/Mockgoose.git"
  },
  "scripts": {
    "pretest": "jshint src test",
    "test": "mocha test"
  },
  "types": "built/mockgoose.d.ts",
  "version": "8.0.2"
}
